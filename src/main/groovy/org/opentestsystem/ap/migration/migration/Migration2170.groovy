package org.opentestsystem.ap.migration.migration

import lombok.extern.slf4j.Slf4j
import org.opentestsystem.ap.common.client.GitClient
import org.opentestsystem.ap.common.gitlab.GitLabSyncManager
import org.opentestsystem.ap.common.model.ItemTransaction
import org.opentestsystem.ap.migration.ApplicationProperties
import org.opentestsystem.ap.migration.model.BranchInfo
import org.opentestsystem.ap.migration.model.ItemInfo

import org.opentestsystem.ap.migration.util.ApplicationUtility
import org.springframework.stereotype.Component

@Slf4j
@Component
class Migration2170 extends AbstractMigration {

    final GitLabSyncManager syncManager

    Migration2170(ApplicationUtility util, GitLabSyncManager syncManager) {
        super(util)
        this.syncManager = syncManager
    }

    @Override
    protected void runMigration(final ItemInfo itemInfo,
                                final BranchInfo branchInfo,
                                final String version,
                                final ApplicationProperties.MigrationDefinition migration,
                                final GitClient gitClient) {
        // special handling, normally done in abstract class
        updateItemVersion(version, gitClient)

        ItemTransaction transaction = branchInfo.getTransaction()
        ItemTransaction syncTransaction = syncManager.generateSyncTransaction(itemInfo.itemId, transaction)
        branchInfo.syncResult = syncManager.syncToDataStore(gitClient, itemInfo.itemId, syncTransaction)
    }
}