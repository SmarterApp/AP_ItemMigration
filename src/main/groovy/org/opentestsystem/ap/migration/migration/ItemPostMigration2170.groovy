package org.opentestsystem.ap.migration.migration

import freemarker.template.Configuration
import freemarker.template.TemplateExceptionHandler
import lombok.extern.slf4j.Slf4j
import org.apache.commons.collections4.MapUtils
import org.opentestsystem.ap.common.assembler.StringAssembler
import org.opentestsystem.ap.common.client.GitClient
import org.opentestsystem.ap.common.itembank.ItemBankSyncManager
import org.opentestsystem.ap.common.model.ItemTransaction
import org.opentestsystem.ap.common.model.sync.SyncItemResult
import org.opentestsystem.ap.common.repository.RepositoryUtil
import org.opentestsystem.ap.migration.config.AppProps
import org.opentestsystem.ap.migration.model.ItemInfo
import org.opentestsystem.ap.migration.model.ItemResult
import org.springframework.stereotype.Component

import static freemarker.template.Configuration.VERSION_2_3_25

@Slf4j
@Component
class ItemPostMigration2170 implements ItemPostMigration {

    static final String TEMPLATE = "post-item.ftl"

    final AppProps appProps

    final ItemBankSyncManager syncManager

    final StringAssembler stringAssembler

    ItemPostMigration2170(AppProps appProps,
                          ItemBankSyncManager syncManager) {
        this.appProps = appProps
        this.syncManager = syncManager
        this.stringAssembler = newStringAssembler(appProps)
    }

    @Override
    void postMigrate(ItemInfo itemInfo, ItemResult itemResult, GitClient gitClient) {
        List<ItemTransaction> transactions = itemInfo.branches.collect {
            RepositoryUtil.branchNameToItemTransaction(it.branchName)
        }

        SyncItemResult result = syncManager.syncToDataStore(
                gitClient,
                appProps.systemUser,
                itemInfo.itemId,
                transactions)

        Map<String, Object> input = new HashMap<>()
        input.put("report", result)

        itemResult.postMigrationReport = stringAssembler.generate(TEMPLATE, input)
    }

    private StringAssembler newStringAssembler(final AppProps appProps) {
        final Configuration freemarkerConfig = new Configuration(VERSION_2_3_25)

        freemarkerConfig.setClassForTemplateLoading(this.getClass(), appProps.reportTemplateFolder)

        freemarkerConfig.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER)
        freemarkerConfig.setDefaultEncoding("UTF-8")

        return new StringAssembler(freemarkerConfig)
    }
}
