package org.opentestsystem.ap.migration.datastore

import groovy.util.logging.Log
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager
import org.opentestsystem.ap.common.datastore.DataStoreDataManager
import org.opentestsystem.ap.common.datastore.DataStoreUtility
import org.opentestsystem.ap.common.datastore.entity.ItemEntity
import org.opentestsystem.ap.common.management.ItemManagerEventProducer
import org.opentestsystem.ap.common.model.Item
import org.opentestsystem.ap.common.model.ItemConstants
import org.opentestsystem.ap.common.model.WerItem
import org.opentestsystem.ap.common.saaif.mapper.model.SkipMigration
import org.opentestsystem.ap.migration.ApplicationDependencyProvider
import org.opentestsystem.ap.migration.ApplicationProperties
import org.opentestsystem.ap.migration.model.MigrationContext
import org.springframework.stereotype.Component

@Log
@Component
class Migration2119 extends AbstractDataStoreMigration {

    Migration2119(ApplicationDependencyProvider applicationDependencyProvider,
                  ApplicationProperties applicationProperties,
                  DataStoreDataManager dataManager,
                  ItemManagerEventProducer eventProducer,
                  DataStoreUtility dataStoreUtility,
                  DataStoreAttachmentManager attachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, attachmentManager)
    }

    @Override
    ItemEntity migrateEntity(ItemEntity itemEntity, MigrationContext migrationContext) {
        Item item = itemEntity.itemJson
        this.checkWer(item)
        this.mapPlainTextToHtml((WerItem) item)
        itemEntity
    }

    private void mapPlainTextToHtml(WerItem werItem) {
        def plainText = werItem.core.en.rubric
        def html = (plainText) ? plainText.replaceAll('\\n\\n', '<p style="">&#xA0;</p>').replaceAll('\\n', '<br/>') : ''
        werItem.core.en.rubric = html
    }

    private void checkWer(Item item) {
        if (item?.type != ItemConstants.ItemType.TYPE_WER) {
            throw new SkipMigration("Item $item.id is not type wer, it is type $item.type")
        }
    }
}