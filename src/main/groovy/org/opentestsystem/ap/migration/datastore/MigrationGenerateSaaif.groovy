package org.opentestsystem.ap.migration.datastore

import groovy.util.logging.Log
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager
import org.opentestsystem.ap.common.datastore.DataStoreDataManager
import org.opentestsystem.ap.common.datastore.DataStoreUtility
import org.opentestsystem.ap.common.datastore.entity.ItemEntity
import org.opentestsystem.ap.common.management.ItemManagerEventProducer
import org.opentestsystem.ap.migration.ApplicationDependencyProvider
import org.opentestsystem.ap.migration.ApplicationProperties
import org.springframework.stereotype.Component

@Log
@Component
class MigrationGenerateSaaif extends AbstractDataStoreMigration {

    MigrationGenerateSaaif(ApplicationDependencyProvider applicationDependencyProvider,
                           ApplicationProperties applicationProperties,
                           DataStoreDataManager dataManager,
                           ItemManagerEventProducer eventProducer,
                           DataStoreUtility dataStoreUtility,
                           DataStoreAttachmentManager attachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, attachmentManager)
    }

    /**
     * Does not save to the database.  We don't want a record inserted to the database when this migration runs.
     * The item is not changing so there is no need to insert it.
     *
     * @param entityToMigrate The entity to clone and migrate.
     * @param version         The version to set on the entity's item json.
     * @return A clone of the entity passed in
     */
    @Override
    protected ItemEntity migrateAndSave(ItemEntity entityToMigrate, String version) {
        entityToMigrate
    }

    @Override
    protected ItemEntity migrateEntity(ItemEntity itemEntity) {
        itemEntity
    }
}