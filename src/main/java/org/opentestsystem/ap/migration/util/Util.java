package org.opentestsystem.ap.migration.util;

import java.io.ByteArrayInputStream;
import java.io.PrintWriter;
import java.nio.file.Path;
import java.util.List;

import lombok.Getter;
import org.apache.commons.collections4.CollectionUtils;
import org.opentestsystem.ap.common.client.GitlabClient;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemBankUser;
import org.opentestsystem.ap.common.repository.ItemRepository;
import org.opentestsystem.ap.common.saaif.JsonModelAssembler;
import org.opentestsystem.ap.migration.config.AppProps;
import org.opentestsystem.ap.migration.model.MigrationState;
import org.springframework.stereotype.Component;

@Getter
@Component
public class Util {

    private static final ItemBankUser USER = new ItemBankUser("iat-migration@smarterbalanced.org", "IAT Migration");

    private final AppProps appProps;

    private final GitlabClient gitlabClient;

    private final ItemRepository itemRepository;

    private JsonModelAssembler jsonModelAssembler = new JsonModelAssembler();

    public Util(final AppProps appProps, final GitlabClient gitlabClient, final ItemRepository itemRepository) {
        this.appProps = appProps;
        this.gitlabClient = gitlabClient;
        this.itemRepository = itemRepository;
    }

    public boolean include(final List<String> include, final String value) {
        return CollectionUtils.isEmpty(include) || include.contains(value);
    }

    public void writeItemJsonToConsole(final Item item) {
        jsonModelAssembler.writeItem(item, new PrintWriter(System.out));
    }

    public void writeMigrationState(final MigrationState migrationState, final Path path) {
        jsonModelAssembler.writeObject(migrationState, path);
    }

    public <T> T readJsonObject(final byte[] bytes, Class<T> type) {
        return jsonModelAssembler.readObject(new ByteArrayInputStream(bytes), type);
    }

    public ItemBankUser getUser() {
        return USER;
    }
}
