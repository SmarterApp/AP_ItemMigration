package org.opentestsystem.ap.migration.migration.migration3017;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.AbstractAssessmentItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.saaif.mapper.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.migration.AbstractImportMigration;
import org.opentestsystem.ap.migration.model.ItemMerge;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.Collection;
import java.util.Collections;

import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_EBSR;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_EQ;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_GI;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_HTQ;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_HTQO;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_HTQS;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MC;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MI;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MS;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_SA;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_TI;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_WER;

@Component
public class MigrationImport3017 extends AbstractImportMigration {
    private static final String[] supportedTypes = new String[]{
            TYPE_EBSR,
            TYPE_EQ,
            TYPE_GI,
            TYPE_HTQ,
            TYPE_HTQO,
            TYPE_HTQS,
            TYPE_MC,
            TYPE_MI,
            TYPE_MS,
            TYPE_SA,
            TYPE_TI,
            TYPE_WER
    };

    public MigrationImport3017(final ApplicationProperties applicationProperties, final DataStoreDataManager dataManager, final ItemManagerEventProducer eventProducer, final DataStoreUtility dataStoreUtility, final DataStoreAttachmentManager dataStoreAttachmentManager, final ApplicationDependencyProvider applicationDependencyProvider) {
        super(applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager, applicationDependencyProvider, supportedTypes);
    }

    @Override
    protected ItemMerge mergeItem(final Item dataStoreItem, final Item mappedItem, final Path itemSyncDir) {
        if (!(dataStoreItem instanceof AbstractAssessmentItem)
                || !(mappedItem instanceof AbstractAssessmentItem)) {
            throw new SkipMigration("Migration3017: a non assessment item was tried to merge.  Item %s", dataStoreItem.getId());
        }

        AbstractAssessmentItem item = (AbstractAssessmentItem) dataStoreItem;
        item.setImportedPageLayout(((AbstractAssessmentItem) mappedItem).getImportedPageLayout());

        return new ItemMerge(item, itemSyncDir, false);
    }

    @Override
    protected Collection<String> getEditedSectionsBlockingMigration() {
        return Collections.emptyList();
    }
}
