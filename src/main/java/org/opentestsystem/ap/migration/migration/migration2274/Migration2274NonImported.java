package org.opentestsystem.ap.migration.migration.migration2274;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.AssessmentItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.saaif.mapper.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.datastore.AbstractDataStoreMigration;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.springframework.stereotype.Component;

import static org.opentestsystem.ap.common.model.ItemConstants.BranchNames.BRANCH_MASTER;
import static org.opentestsystem.ap.common.model.ItemConstants.Section.SECTION_CORE;

/**
 * IAT-2274: Show EQ, GI, and TI rubric on scoring tab for imported items
 */
@Component
public class Migration2274NonImported extends AbstractDataStoreMigration {

    public Migration2274NonImported(ApplicationDependencyProvider applicationDependencyProvider,
                                    ApplicationProperties applicationProperties,
                                    DataStoreDataManager dataManager,
                                    ItemManagerEventProducer eventProducer,
                                    DataStoreUtility dataStoreUtility,
                                    DataStoreAttachmentManager dataStoreAttachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility,
            dataStoreAttachmentManager);
    }

    @Override
    protected ItemEntity migrateEntity(ItemEntity itemEntity, MigrationContext migrationContext) {
        Item item = itemEntity.getItemJson();
        if (item.isImported()) {
            throw new SkipMigration("not a TIMS created item, skip imported items");
        } else if (!(item instanceof AssessmentItem)) {
            throw new SkipMigration("item not an assessment item");
        } else {
            // all TIMS created assessment items (non-imported) need the flag set to true
            ((AssessmentItem) item).getCore().getScoring().setMachineScoringManagedByIat(true);
            itemEntity.setItemJson(item);
        }
        return itemEntity;
    }

    @Override
    protected boolean shouldMigrateBranch(ItemEntity migratedEntity) {
        String branch = migratedEntity.getBranchName();
        return BRANCH_MASTER.equalsIgnoreCase(branch) || SECTION_CORE.equalsIgnoreCase(branch);
    }
}
