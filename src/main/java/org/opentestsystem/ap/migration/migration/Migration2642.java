package org.opentestsystem.ap.migration.migration;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreItemManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.ItemMerge;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.Collection;
import java.util.Collections;

import static org.opentestsystem.ap.common.model.ModelConstants.Section.SECTION_TEXTTOSPEECH;

@Slf4j
@Component
public class Migration2642 extends AbstractImportMigration {

    public Migration2642(final ApplicationDependencyProvider applicationDependencyProvider,
                         final ApplicationProperties applicationProperties,
                         final DataStoreDataManager dataManager,
                         final DataStoreItemManager dataStoreItemManager,
                         final DataStoreUtility dataStoreUtility,
                         final DataStoreAttachmentManager attachmentManager) {
        super(applicationProperties, dataManager, dataStoreUtility, attachmentManager,
                applicationDependencyProvider, dataStoreItemManager);
    }

    @Override
    protected ItemMerge mergeItem(final Item dataStoreItem, final Item mappedItem, final Path itemSyncDir) {
        dataStoreItem.setTextToSpeech(mappedItem.getTextToSpeech());
        return new ItemMerge(dataStoreItem, itemSyncDir, false);
    }

    @Override
    protected Collection<String> getEditedSectionsBlockingMigration() {
        return Collections.singleton(SECTION_TEXTTOSPEECH);
    }
}
