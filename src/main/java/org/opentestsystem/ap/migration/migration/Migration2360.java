package org.opentestsystem.ap.migration.migration;

import org.apache.commons.collections4.MapUtils;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.datastore.AbstractDataStoreMigration;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;

import static org.apache.commons.lang3.StringUtils.defaultString;
import static org.apache.commons.lang3.StringUtils.isBlank;

@Component
public class Migration2360 extends AbstractDataStoreMigration {
    private static final Map<String, String> invalidScoringEngineMap = new HashMap<>();


    public Migration2360(ApplicationDependencyProvider applicationDependencyProvider, ApplicationProperties applicationProperties, DataStoreDataManager dataManager, ItemManagerEventProducer eventProducer, DataStoreUtility dataStoreUtility, DataStoreAttachmentManager dataStoreAttachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager);

        // Map invalid to correct values
        invalidScoringEngineMap.put("Automatic with Key", "AutomaticWithKey");
        invalidScoringEngineMap.put("Automatic with Key(s)", "AutomaticWithKeys");
        invalidScoringEngineMap.put("Automatic with Machine Rubric", "AutomaticWithRubric");
    }

    @Override
    protected ItemEntity migrateEntity(ItemEntity itemEntity) {
        String scoringEngine = itemEntity.getItemJson().getCore().getMetadata().getScoringEngine();

        if (!isBlank(scoringEngine) && isInvalidScoringEngine(scoringEngine)) {
            itemEntity.getItemJson().getCore().getMetadata()
                    .setScoringEngine(
                            MapUtils.getString(invalidScoringEngineMap, scoringEngine, defaultString(scoringEngine)));
        }

        return itemEntity;
    }

    private boolean isInvalidScoringEngine(String scoringEngine) {
        return invalidScoringEngineMap.containsKey(scoringEngine);
    }
}
