package org.opentestsystem.ap.migration.migration;

import com.google.common.collect.Sets;
import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemConstants;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.ItemMerge;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.Collection;

import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_STIM;

@Slf4j
@Component
public class Migration2657 extends AbstractImportMigration {
    public Migration2657(ApplicationDependencyProvider applicationDependencyProvider,
                         ApplicationProperties applicationProperties,
                         DataStoreDataManager dataManager,
                         ItemManagerEventProducer eventProducer,
                         DataStoreUtility dataStoreUtility,
                         DataStoreAttachmentManager attachmentManager) {

        super(applicationProperties, dataManager, eventProducer, dataStoreUtility, attachmentManager,
                applicationDependencyProvider, TYPE_STIM);

    }

    @Override
    protected ItemMerge mergeItem(final Item dataStoreItem, final Item mappedItem, final Path itemSyncDir) {
        dataStoreItem.getCore().setEn(mappedItem.getCore().getEn());
        dataStoreItem.getTranslations().setEsp(mappedItem.getTranslations().getEsp());
        dataStoreItem.setAudio(mappedItem.getAudio());

        return new ItemMerge(dataStoreItem, itemSyncDir, true);
    }

    @Override
    protected Collection<String> getEditedSectionsBlockingMigration() {
        return Sets.newHashSet(ItemConstants.Section.SECTION_CORE,
                ItemConstants.Section.SECTION_TRANSLATIONS,
                ItemConstants.Section.SECTION_GLOSSARY,
                ItemConstants.Section.SECTION_AUDIO,
                ItemConstants.Section.SECTION_IMAGES);
    }
}
