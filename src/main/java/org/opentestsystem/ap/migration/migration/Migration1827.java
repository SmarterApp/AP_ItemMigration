package org.opentestsystem.ap.migration.migration;

import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.gitlab4j.api.models.Commit;
import org.opentestsystem.ap.common.client.GitClient;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemConstants;
import org.opentestsystem.ap.migration.model.BranchInfo;
import org.opentestsystem.ap.migration.model.ItemInfo;
import org.opentestsystem.ap.migration.model.MigrationDefinition;
import org.opentestsystem.ap.migration.util.Util;
import org.springframework.stereotype.Component;

import java.util.List;

@Slf4j
@Component
public class Migration1827 extends AbstractMigration {

    public Migration1827(Util util) {
        super(util);
    }

    @Override
    protected void runMigration(final ItemInfo itemInfo,
                                final BranchInfo branchInfo,
                                final MigrationDefinition migration,
                                final GitClient gitClient) {

        final Item branchItem = gitClient.readModelFile();

        if (!branchItem.getType().equals(ItemConstants.ItemType.TYPE_TUT)) {

            if (StringUtils.isBlank(branchItem.getCore().getMetadata().getPrimaryContentDomain())) {
                List<Commit> commits = gitlabClient.lookupItemHistory(itemInfo.getItemId());

                for (Commit commit : commits) {
                    if (commit.getMessage().equals("Migration: update metadata field names")) {
                        Item commitItem = itemRepository.loadItemRemotely(itemInfo.getItemId(), commit.getId());
                        String pcd = commitItem.getCore().getMetadata().getPrimaryContentDomain();
                        if (StringUtils.isNotBlank(pcd)) {
                            branchItem.getCore().getMetadata().setPrimaryContentDomain(pcd);
                            gitClient.updateItem(branchItem, branchInfo.getBranchName(), migration.getMigrationDescription());
                        }
                        break;
                    }
                }
            }
        }
    }
}
