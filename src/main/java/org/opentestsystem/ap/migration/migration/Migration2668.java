package org.opentestsystem.ap.migration.migration;

import com.google.common.collect.Sets;
import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.HasOptions;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.ItemMerge;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.Collection;

import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MC;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MS;
import static org.opentestsystem.ap.common.model.ItemConstants.Section.SECTION_TRANSLATIONS;

/**
 * IAT-2668: Imported items have duplicated images in English and Spanish options MC, MS.
 */
@Slf4j
@Component
public class Migration2668 extends AbstractImportMigration {

    public Migration2668(final ApplicationProperties applicationProperties,
                         final DataStoreDataManager dataManager,
                         final ItemManagerEventProducer eventProducer,
                         final DataStoreUtility dataStoreUtility,
                         final DataStoreAttachmentManager dataStoreAttachmentManager,
                         final ApplicationDependencyProvider applicationDependencyProvider) {
        super(applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager,
            applicationDependencyProvider, TYPE_MC, TYPE_MS);
    }

    /**
     * Only update the spanish options.
     *
     * @param dataStoreItem The {@link Item} stored within TIMS.
     * @param mappedItem    The mapped {@link Item} from the import model mappers.
     * @param itemSyncDir   The {@link Path} to the imported attachments referenced by the mapped item.
     * @return The merged item with the Spanish options on the MC/MS updated.
     */
    @Override
    protected ItemMerge mergeItem(final Item dataStoreItem, final Item mappedItem, final Path itemSyncDir) {
        HasOptions dataStoreEspOptions = (HasOptions) mappedItem.getTranslations().getEsp();
        HasOptions mappedEspOptions = (HasOptions) mappedItem.getTranslations().getEsp();
        dataStoreEspOptions.setOptions(mappedEspOptions.getOptions());
        return new ItemMerge(dataStoreItem, itemSyncDir, DO_NOT_SYNC_ATTACHMENTS);
    }

    @Override
    protected Collection<String> getEditedSectionsBlockingMigration() {
        return Sets.newHashSet(SECTION_TRANSLATIONS);
    }
}
