package org.opentestsystem.ap.migration.migration.migration2849;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemConstants;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.migration.AbstractImportMigration;
import org.opentestsystem.ap.migration.model.ItemMerge;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.Collection;
import java.util.Collections;

@Component
public class Migration2849Import extends AbstractImportMigration {
    public Migration2849Import(ApplicationProperties applicationProperties, DataStoreDataManager dataManager, ItemManagerEventProducer eventProducer, DataStoreUtility dataStoreUtility, DataStoreAttachmentManager dataStoreAttachmentManager, ApplicationDependencyProvider applicationDependencyProvider) {
        super(applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager, applicationDependencyProvider, ItemConstants.ItemType.TYPE_STIM);
    }

    @Override
    protected ItemMerge mergeItem(Item dataStoreItem, Item mappedItem, Path itemSyncDir) {
        dataStoreItem.getCore().getMetadata().setStimulusFormat(mappedItem.getCore().getMetadata().getStimulusFormat());

        return new ItemMerge(dataStoreItem, itemSyncDir, false);
    }

    @Override
    protected Collection<String> getEditedSectionsBlockingMigration() {
        return Collections.singleton(ItemConstants.Section.SECTION_METADATA);
    }
}
