package org.opentestsystem.ap.migration.migration.migration2854;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.AssessmentItem;
import org.opentestsystem.ap.common.saaif.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.datastore.AbstractDataStoreMigration;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.springframework.stereotype.Component;

@Component
public class Migration2854NonImport extends AbstractDataStoreMigration {
    public Migration2854NonImport(ApplicationDependencyProvider applicationDependencyProvider, ApplicationProperties applicationProperties, DataStoreDataManager dataManager, ItemManagerEventProducer eventProducer, DataStoreUtility dataStoreUtility, DataStoreAttachmentManager dataStoreAttachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Override
    protected ItemEntity migrateEntity(ItemEntity itemEntity, MigrationContext migrationContext) {
        if(!(itemEntity.getItemJson() instanceof AssessmentItem)) {
            throw new SkipMigration("Migration2854NonImport: %s does not support enemy items", itemEntity.getItemId());
        }

        AssessmentItem assessmentItem = (AssessmentItem) itemEntity.getItemJson();

        if(assessmentItem.getCore().getEnemyItems().isEmpty()) {
            throw new SkipMigration("Migration2854NonImport: %s does not have enemy items", itemEntity.getItemId());
        }

        return itemEntity;
    }
}
