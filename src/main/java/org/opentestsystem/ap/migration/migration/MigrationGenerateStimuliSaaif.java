package org.opentestsystem.ap.migration.migration;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreItemManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.model.ModelConstants;
import org.opentestsystem.ap.common.saaif.mapper.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;
import org.springframework.stereotype.Component;

@Component
public class MigrationGenerateStimuliSaaif extends AbstractMigration {
    public MigrationGenerateStimuliSaaif(final ApplicationDependencyProvider applicationDependencyProvider,
                                         final ApplicationProperties applicationProperties,
                                         final DataStoreDataManager dataManager,
                                         final DataStoreItemManager dataStoreItemManager,
                                         final DataStoreUtility dataStoreUtility,
                                         final DataStoreAttachmentManager dataStoreAttachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, dataStoreItemManager, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Override
    protected ItemEntity migrateEntity(final ItemEntity itemEntity, final MigrationContext migrationContext) {
        if(!ModelConstants.ItemType.TYPE_STIM.equals(itemEntity.getItemJson().getType())) {
            throw new SkipMigration("Item %s is not a stimulus", itemEntity.getId());
        }

        return itemEntity;
    }
}
