package org.opentestsystem.ap.migration.migration.migration3120;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.contentupdater.ContentUpdater;
import org.opentestsystem.ap.migration.migration.AbstractImportMigration;
import org.opentestsystem.ap.migration.model.ItemMerge;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.Collection;
import java.util.Collections;

import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_EQ;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MC;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MI;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_MS;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_STIM;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_TI;

@Component
public class Migration3120 extends AbstractImportMigration {
    private static String[] supportedItemTypes = new String[]{TYPE_TI, TYPE_STIM, TYPE_MC, TYPE_MS, TYPE_MI, TYPE_EQ};

    public Migration3120(final ApplicationProperties applicationProperties, final DataStoreDataManager dataManager, final ItemManagerEventProducer eventProducer, final DataStoreUtility dataStoreUtility, final DataStoreAttachmentManager dataStoreAttachmentManager, final ApplicationDependencyProvider applicationDependencyProvider) {
        super(applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager, applicationDependencyProvider, supportedItemTypes);
    }

    @Override
    protected ItemMerge mergeItem(final Item dataStoreItem, final Item mappedItem, final Path itemSyncDir) {
        //Get TTS VI for images in mapped item
        // Command will run to update item
        //Update datastore item with the
        TtsViContentUpdateCommand updateCommand = new TtsViContentUpdateCommand(mappedItem, dataStoreItem.getImages());
        ContentUpdater contentUpdater = this.contentUpdaterFactory.getContentUpdaterForType(dataStoreItem.getType());
        contentUpdater.updateContent(dataStoreItem, updateCommand);
        return new ItemMerge(dataStoreItem, itemSyncDir, false);
    }

    @Override
    protected Collection<String> getEditedSectionsBlockingMigration() {
        return Collections.emptyList();
    }
}
