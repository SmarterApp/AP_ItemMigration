package org.opentestsystem.ap.migration.migration.migration3017;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreItemManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.saaif.mapper.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.migration.AbstractMigration;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;
import org.springframework.stereotype.Component;

import static org.opentestsystem.ap.common.model.ModelConstants.ItemType.TYPE_STIM;
import static org.opentestsystem.ap.common.model.ModelConstants.ItemType.TYPE_TUT;

@Component
public class MigrationNonImport3017 extends AbstractMigration {
    public MigrationNonImport3017(final ApplicationDependencyProvider applicationDependencyProvider,
                                  final ApplicationProperties applicationProperties,
                                  final DataStoreDataManager dataManager,
                                  final DataStoreUtility dataStoreUtility,
                                  final DataStoreAttachmentManager dataStoreAttachmentManager,
                                  final DataStoreItemManager dataStoreItemManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, dataStoreItemManager, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Override
    protected ItemEntity migrateEntity(final ItemEntity itemEntity, final MigrationContext migrationContext) {
        final String itemType = itemEntity.getItemJson().getType();
        if(TYPE_STIM.equals(itemType) || TYPE_TUT.equals(itemType)) {
            throw new SkipMigration("Migration3017: skipping migration because item %s is not assessment item", itemEntity.getItemId());
        }

        return itemEntity;
    }
}
