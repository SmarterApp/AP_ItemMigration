package org.opentestsystem.ap.migration.migration;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.ItemConstants;
import org.opentestsystem.ap.common.saaif.model.SkipMigration;
import org.opentestsystem.ap.common.saaif.util.ImportFileUtil;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.datastore.AbstractDataStoreMigration;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.springframework.stereotype.Component;

@Component
public class Migration2792 extends AbstractDataStoreMigration {
    public Migration2792(final ApplicationDependencyProvider applicationDependencyProvider, final ApplicationProperties applicationProperties, final DataStoreDataManager dataManager, final ItemManagerEventProducer eventProducer, final DataStoreUtility dataStoreUtility, final DataStoreAttachmentManager dataStoreAttachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Override
    protected ItemEntity migrateEntity(final ItemEntity itemEntity, MigrationContext migrationContext) {
        final String itemType = itemEntity.getItemJson().getType();
        if(!ImportFileUtil.isImported(itemEntity.getItemJson())
                || (!ItemConstants.ItemType.TYPE_EBSR.equals(itemType)
                && !ItemConstants.ItemType.TYPE_MS.equals(itemType))
        ) {
            throw new SkipMigration("Migration 2792: Item %s type is not EBSR or MS", itemEntity.getId());
        }

        itemEntity.getItemJson().getCore().getMetadata().setScoringEngine("AutomaticWithKeys");

        return itemEntity;
    }
}
