package org.opentestsystem.ap.migration.migration.migration2313;

import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.AssessmentItem;
import org.opentestsystem.ap.common.model.HtqsItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.datastore.AbstractDataStoreMigration;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.springframework.stereotype.Component;

import static org.opentestsystem.ap.common.model.ItemConstants.ItemType.TYPE_HTQS;

@Component
public class Migration2313NonHtqs extends AbstractDataStoreMigration {

    public Migration2313NonHtqs(ApplicationDependencyProvider applicationDependencyProvider, ApplicationProperties applicationProperties, DataStoreDataManager dataManager, ItemManagerEventProducer eventProducer, DataStoreUtility dataStoreUtility, DataStoreAttachmentManager dataStoreAttachmentManager) {
        super(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager);
    }

    /**
     * Set default values on new model properties
     * @param itemEntity The entity record to migrate.
     * @return
     */
    @Override
    protected ItemEntity migrateEntity(ItemEntity itemEntity, MigrationContext migrationContext) {
        if (shouldMigrateItem(itemEntity)) {
            AssessmentItem item = (AssessmentItem) itemEntity.getItemJson();
            item.getCore().getScoring().setMachineScoringManagedByIat(true);
            if (TYPE_HTQS.equalsIgnoreCase(itemEntity.getItemJson().getType())) {
                HtqsItem htqsItem = (HtqsItem) itemEntity.getItemJson();
                htqsItem.getCore().getEn().getHtqSelectable().setManagedByIat(true);
                htqsItem.getCore().getScoring().setMachineScoringManagedByIat(false);
                itemEntity.setItemJson(htqsItem);
            }
            itemEntity.setItemJson(item);
        }
        return itemEntity;
    }

    /**
     * Apply migration to non-imported HTQS
     *
     * @param itemEntity The entity record to migrate.
     * @return
     */
    private boolean shouldMigrateItem(ItemEntity itemEntity) {
        Item item = itemEntity.getItemJson();
        return TYPE_HTQS.equalsIgnoreCase(item.getType()) && !item.isImported();
    }
}
