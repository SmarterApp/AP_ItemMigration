package org.opentestsystem.ap.migration.migration;

import org.apache.commons.io.FilenameUtils;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreEventProducer;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.model.Attachment;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.datastore.AbstractDataStoreMigration;

public class Migration2225 extends AbstractDataStoreMigration {
    private static final String aslEndName = "_STEM";

    public Migration2225(final ApplicationProperties applicationProperties,
                         final DataStoreDataManager dataManager,
                         final DataStoreEventProducer eventProducer,
                         final DataStoreUtility dataStoreUtility,
                         final DataStoreAttachmentManager dataStoreAttachmentManager) {
        super(applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Override
    protected ItemEntity migrateEntity(final ItemEntity itemEntity) {
        if(itemEntity.getItemJson().getAsl().getAttachments().isEmpty()) {
            return itemEntity;
        }

        for(Attachment aslAttachment : itemEntity.getItemJson().getAsl().getAttachments()) {
            String fileName = FilenameUtils.getBaseName(aslAttachment.getFileName());

            if(fileName.endsWith(aslEndName)) {
                continue;
            }

            String suffix = FilenameUtils.getExtension(aslAttachment.getFileName());

            String newFileName = FilenameUtils.getName(fileName) + aslEndName + "." + suffix;

            boolean renamed = dataStoreAttachmentManager.renameAttachment(itemEntity.getItemId(), itemEntity.getBranchName(), aslAttachment.getFileName(), newFileName);

            if(renamed) {
                aslAttachment.setFileName(newFileName);
            }
        }

        return itemEntity;
    }
}
