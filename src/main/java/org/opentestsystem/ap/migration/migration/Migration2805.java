package org.opentestsystem.ap.migration.migration;

import com.google.common.collect.Sets;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemConstants;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.ItemMerge;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.Collection;

@Component
public class Migration2805 extends AbstractImportMigration {
    public Migration2805(ApplicationProperties applicationProperties, DataStoreDataManager dataManager, ItemManagerEventProducer eventProducer, DataStoreUtility dataStoreUtility, DataStoreAttachmentManager dataStoreAttachmentManager, ApplicationDependencyProvider applicationDependencyProvider) {
        super(applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager, applicationDependencyProvider, ItemConstants.ItemType.TYPE_EBSR);
    }

    @Override
    ItemMerge mergeItem(final Item dataStoreItem, final Item mappedItem, final Path itemSyncDir) {
        dataStoreItem.getCore().setEn(mappedItem.getCore().getEn());
        dataStoreItem.setTranslations(mappedItem.getTranslations());

        return new ItemMerge(dataStoreItem, itemSyncDir, true);
    }

    @Override
    Collection<String> getEditedSectionsBlockingMigration() {
        return Sets.newHashSet(ItemConstants.Section.SECTION_CORE, ItemConstants.Section.SECTION_TRANSLATIONS);
    }
}
