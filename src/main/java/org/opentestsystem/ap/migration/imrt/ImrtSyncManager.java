package org.opentestsystem.ap.migration.imrt;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.http.converter.ByteArrayHttpMessageConverter;
import org.springframework.stereotype.Component;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestTemplate;

import java.net.URI;

@Slf4j
@Component
public class ImrtSyncManager {

    private final ApplicationProperties.Imrt imrt;

    private final RestTemplate restTemplate;

    public ImrtSyncManager(ApplicationProperties applicationProperties,
                           RestTemplateBuilder restTemplateBuilder) {
        this.imrt = applicationProperties.getImrt();

        this.restTemplate = restTemplateBuilder
                .additionalMessageConverters(new ByteArrayHttpMessageConverter())
                .build();
    }

    public boolean syncItem(String itemId) {
        ResponseEntity<byte[]> response;
        String url = String.format(imrt.getSyncUrlPattern(), itemId);
        try {
            response = this.restTemplate.exchange(
                    URI.create(url),
                    HttpMethod.POST,
                    new HttpEntity<>(null, null),
                    byte[].class);
        } catch (HttpClientErrorException e) {
            log.error(String.format("Unable to synchronize item %s to IMRT", itemId), e);
            return false;
        }

        if (response.getStatusCode() == HttpStatus.OK) {
            log.info(String.format("Successfully synchronized item %s to IMRT: %s", itemId, url));
        }

        return response.getStatusCode() == HttpStatus.OK;
    }

}
