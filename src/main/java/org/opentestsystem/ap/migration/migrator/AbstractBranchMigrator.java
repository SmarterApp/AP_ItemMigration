package org.opentestsystem.ap.migration.migrator;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.common.client.GitClient;
import org.opentestsystem.ap.common.client.GitlabClient;
import org.opentestsystem.ap.common.repository.ItemRepository;
import org.opentestsystem.ap.migration.config.AppProps;
import org.opentestsystem.ap.migration.model.BranchInfo;
import org.opentestsystem.ap.migration.model.BranchMigration;
import org.opentestsystem.ap.migration.model.ItemInfo;
import org.opentestsystem.ap.migration.model.MigrationDefinition;
import org.opentestsystem.ap.migration.util.Util;

@Slf4j
public abstract class AbstractBranchMigrator implements BranchMigrator {

    protected final Util util;

    protected final GitlabClient gitlabClient;

    protected final ItemRepository itemRepository;

    protected final AppProps appProps;

    protected AbstractBranchMigrator(final Util util) {
        this.util = util;
        this.gitlabClient = util.getGitlabClient();
        this.itemRepository = util.getItemRepository();
        this.appProps = util.getAppProps();
    }

    @Override
    public BranchMigration migrate(final ItemInfo itemInfo,
                                   final BranchInfo branchInfo,
                                   final MigrationDefinition migrationDefinition) {
        final GitClient gitClient = itemRepository.cloneRemoteRepository(util.getUser(), itemInfo.getItemId());
        return migrate(itemInfo, branchInfo, migrationDefinition, gitClient);
    }

}
