package org.opentestsystem.ap.migration.contentupdater;

import org.opentestsystem.ap.common.model.ItemOption;
import org.opentestsystem.ap.common.model.McItem;
import org.opentestsystem.ap.common.model.content.McItemContent;

import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ESN;

public class McContentUpdater extends AbstractContentUpdater<McItem> {

    @Override
    protected boolean updateEnglishContent(McItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        McItemContent content = item.getCore().getEn();

        ContentUpdateCommandResult commandResult = updateCommand.applyEnglishContentUpdate(content.getPrompt());
        content.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        for (ItemOption itemOption : content.getOptions()) {
            commandResult = updateCommand.applyEnglishContentUpdate(itemOption.getRationale());
            itemOption.setRationale(commandResult.getUpdatedContent());
            isContentChanged = isContentChanged || commandResult.isContentChanged();

            commandResult = updateCommand.applyEnglishContentUpdate(itemOption.getText());
            itemOption.setText(commandResult.getUpdatedContent());
            isContentChanged = isContentChanged || commandResult.isContentChanged();
        }

        return isContentChanged;
    }

    @Override
    protected boolean updateSpanishContent(McItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        McItemContent english = item.getCore().getEn();
        McItemContent spanish = item.getTranslations().getEsp();

        ContentUpdateCommandResult commandResult =
                updateCommand.applyTranslatedContentUpdate(LANG_ESN, spanish.getPrompt(), english.getPrompt());
        spanish.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        boolean optionsChanged = this.updateSpanishItemOptions(spanish.getOptions(), english.getOptions(), updateCommand);

        return isContentChanged || optionsChanged;
    }
}
