package org.opentestsystem.ap.migration.contentupdater;

import org.opentestsystem.ap.common.model.WerItem;
import org.opentestsystem.ap.common.model.content.WerItemContent;

import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ESN;

public class WerContentUpdater extends AbstractContentUpdater<WerItem> {

    @Override
    protected boolean updateEnglishContent(WerItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        WerItemContent content = item.getCore().getEn();

        ContentUpdateCommandResult commandResult = updateCommand.applyEnglishContentUpdate(content.getPrompt());
        content.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        commandResult = updateCommand.applyEnglishContentUpdate(content.getRubric());
        content.setRubric(commandResult.getUpdatedContent());
        isContentChanged = isContentChanged || commandResult.isContentChanged();

        for (int i = 0; i < content.getExemplarResponses().size(); i++) {
            commandResult = updateCommand.applyEnglishContentUpdate(content.getExemplarResponses().get(i));
            content.getExemplarResponses().set(i, commandResult.getUpdatedContent());
            isContentChanged = isContentChanged || commandResult.isContentChanged();
        }

        return isContentChanged;
    }

    @Override
    protected boolean updateSpanishContent(WerItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        WerItemContent english = item.getCore().getEn();
        WerItemContent spanish = item.getTranslations().getEsp();

        ContentUpdateCommandResult commandResult =
                updateCommand.applyTranslatedContentUpdate(LANG_ESN, spanish.getPrompt(), english.getPrompt());
        spanish.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        commandResult = updateCommand.applyTranslatedContentUpdate(LANG_ESN, spanish.getRubric(), english.getRubric());
        spanish.setRubric(commandResult.getUpdatedContent());
        isContentChanged = isContentChanged || commandResult.isContentChanged();

        boolean exemplarChanged =  this.updateSpanishListOfStrings(
                spanish.getExemplarResponses(), english.getExemplarResponses(), updateCommand);

        return isContentChanged || exemplarChanged;
    }
}
