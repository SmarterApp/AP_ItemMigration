package org.opentestsystem.ap.migration.contentupdater;

import org.opentestsystem.ap.common.exception.SystemException;
import org.opentestsystem.ap.common.model.ModelConstants;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;

@Component
public class ContentUpdaterFactory {

    private static final Map<String, ContentUpdater> CONTENT_UPDATER_MAP = buildContentUpdaterMap();

    @SuppressWarnings("unchecked")
    private static Map<String, ContentUpdater> buildContentUpdaterMap() {
        Map updaterMap = new HashMap<String, ContentUpdater>();
        updaterMap.put(ModelConstants.ItemType.TYPE_EBSR, new EbsrContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_EQ, new EqContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_GI, new GiContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_HTQO, new HtqoContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_HTQS, new HtqsContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_MC, new McContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_MI, new MiContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_MS, new MsContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_SA, new SaContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_STIM, new StimContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_TI, new TiContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_WER, new WerContentUpdater());
        updaterMap.put(ModelConstants.ItemType.TYPE_TUT, new TutContentUpdater());

        return updaterMap;
    }

    public ContentUpdater getContentUpdaterForType(String itemType) {
        if (!CONTENT_UPDATER_MAP.containsKey(itemType.toLowerCase())) {
            throw new SystemException(String.format("ContentUpdate class for item type %s was not found.", itemType));
        }
        return CONTENT_UPDATER_MAP.get(itemType.toLowerCase());
    }
}
