package org.opentestsystem.ap.migration.contentupdater;

import org.opentestsystem.ap.common.model.TiItem;
import org.opentestsystem.ap.common.model.content.TiItemContent;

import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ESN;

public class TiContentUpdater extends AbstractContentUpdater<TiItem> {

    @Override
    protected boolean updateEnglishContent(TiItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        TiItemContent content = item.getCore().getEn();

        ContentUpdateCommandResult commandResult = updateCommand.applyEnglishContentUpdate(content.getPrompt());
        content.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        commandResult = updateCommand.applyEnglishContentUpdate(content.getTable().getTitle());
        content.getTable().setTitle(commandResult.getUpdatedContent());
        isContentChanged = isContentChanged || commandResult.isContentChanged();

        commandResult = updateCommand.applyEnglishContentUpdate(item.getCore().getScoring().getRubric());
        item.getCore().getScoring().setRubric(commandResult.getUpdatedContent());
        isContentChanged = isContentChanged || commandResult.isContentChanged();

        boolean tableChanged = this.updateEnglishTable(content.getTable(), updateCommand, !LABELS_ONLY);

        return isContentChanged || tableChanged;
    }

    @Override
    protected boolean updateSpanishContent(TiItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        TiItemContent english = item.getCore().getEn();
        TiItemContent spanish = item.getTranslations().getEsp();

        ContentUpdateCommandResult commandResult =
                updateCommand.applyTranslatedContentUpdate(LANG_ESN, spanish.getPrompt(), english.getPrompt());
        spanish.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        commandResult = updateCommand.applyTranslatedContentUpdate(
                LANG_ESN,
                spanish.getTable().getTitle(),
                english.getTable().getTitle());
        spanish.getTable().setTitle(commandResult.getUpdatedContent());
        isContentChanged = isContentChanged || commandResult.isContentChanged();

        boolean columnsChanged = this.updateSpanishTableColumns(
                spanish.getTable().getColumns(), english.getTable().getColumns(), updateCommand);

        boolean rowsChanged = this.updateSpanishTableRows(
                spanish.getTable().getRows(), english.getTable().getRows(), updateCommand, !LABELS_ONLY);

        return isContentChanged || columnsChanged || rowsChanged;
    }
}
