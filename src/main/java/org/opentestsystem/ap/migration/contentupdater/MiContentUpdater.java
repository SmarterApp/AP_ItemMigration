package org.opentestsystem.ap.migration.contentupdater;

import org.opentestsystem.ap.common.model.MiItem;
import org.opentestsystem.ap.common.model.content.MiItemContent;

import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ESN;

public class MiContentUpdater extends AbstractContentUpdater<MiItem> {

    @Override
    protected boolean updateEnglishContent(MiItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        MiItemContent content = item.getCore().getEn();

        ContentUpdateCommandResult commandResult = updateCommand.applyEnglishContentUpdate(content.getPrompt());
        content.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        boolean tableChanged = this.updateEnglishTable(content.getTable(), updateCommand, LABELS_ONLY);

        return isContentChanged || tableChanged;
    }

    @Override
    protected boolean updateSpanishContent(MiItem item, ContentUpdateCommand updateCommand) {
        boolean isContentChanged;
        MiItemContent english = item.getCore().getEn();
        MiItemContent spanish = item.getTranslations().getEsp();

        ContentUpdateCommandResult commandResult =
                updateCommand.applyTranslatedContentUpdate(LANG_ESN, spanish.getPrompt(), english.getPrompt());
        spanish.setPrompt(commandResult.getUpdatedContent());
        isContentChanged = commandResult.isContentChanged();

        boolean columnsChanged = this.updateSpanishTableColumns(
            spanish.getTable().getColumns(), english.getTable().getColumns(), updateCommand);
        isContentChanged = isContentChanged || columnsChanged;

        boolean rowsChanged = this.updateSpanishTableRows(
            spanish.getTable().getRows(), english.getTable().getRows(), updateCommand, LABELS_ONLY);
        isContentChanged = isContentChanged || rowsChanged;

        return isContentChanged;
    }
}
