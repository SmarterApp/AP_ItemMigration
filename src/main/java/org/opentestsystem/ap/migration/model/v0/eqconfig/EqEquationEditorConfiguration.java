package org.opentestsystem.ap.migration.model.v0.eqconfig;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Data;
import org.opentestsystem.ap.migration.model.v0.ItemConstants;

import static org.opentestsystem.ap.migration.model.v0.ItemConstants.EqEditorConfigName.NumpadOnly;

@Data
public class EqEquationEditorConfiguration {

    @JsonIgnore
    private ItemConstants.EqEditorConfigName configEnum;

    private String code;

    private String label;

    public EqEquationEditorConfiguration() {
    }

    public EqEquationEditorConfiguration(final ItemConstants.EqEditorConfigName configEnum) {
        this.configEnum = configEnum;
        this.code = configEnum.name();
        this.label = configEnum.getLabel();
    }

    @JsonCreator()
    public EqEquationEditorConfiguration(@JsonProperty("code") final String code) {
        setCode(code);
    }

    private EqEquationEditorNumpadConfiguration numpadConfiguration = new EqEquationEditorNumpadConfiguration();

    private EqEquationEditorVariableRowConfiguration variableRowConfiguration = new
        EqEquationEditorVariableRowConfiguration();

    private EqEquationEditorBasicMathRowConfiguration basicMathRowConfiguration = new
        EqEquationEditorBasicMathRowConfiguration();

    private EqEquationEditorComparisonRowConfiguration comparisonRowConfiguration = new
        EqEquationEditorComparisonRowConfiguration();

    private EqEquationEditorAdvancedMathRowConfiguration advancedMathRowConfiguration = new
        EqEquationEditorAdvancedMathRowConfiguration();

    private EqEquationEditorTrigonometryRowConfiguration trigonometryRowConfiguration = new
        EqEquationEditorTrigonometryRowConfiguration();

    public void setCode(final String code) {
        this.configEnum = code != null ? ItemConstants.EqEditorConfigName.valueOf(code) : NumpadOnly;
        this.code = configEnum.name();
        this.label = configEnum.getLabel();
    }

    // setting property 'code' sets 'label'
    private void setLabel(final String label) {
        this.label = label;
    }

    @JsonIgnore
    public String getSaaifConfigTabName() {
        return configEnum != null ? configEnum.getSaaifEqTabConfig() : "Basic";
    }

    @JsonIgnore
    public boolean isNoFractionAndNoMinus() {
        return NumpadOnly.equals(configEnum);
    }

    @JsonIgnore
    public boolean isAsterisk() {
        boolean value = true;
        switch (configEnum) {
            case Grades3And4:
            case Grade5:
                value = false;
                break;
        }
        return value;
    }
}
