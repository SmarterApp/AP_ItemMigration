/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.migration.model.v0;

import java.util.HashSet;
import java.util.Set;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import org.opentestsystem.ap.common.security.model.Role;

/**
 * The basic information needed to record the user who made
 * changes to an item.  The properties 'userName' and 'fullName'
 * are used to set the Git configuration.
 */
@Getter
@EqualsAndHashCode
public class ItemBankUser {

    private final String userName;

    private final String fullName;

    private Set<Role> roles = new HashSet<>();

    public ItemBankUser(final String userName, final String fullName) {
        this.userName = userName;
        this.fullName = fullName;
    }

    public ItemBankUser(final String userName, final String fullName, final Set<Role> roles) {
        this.userName = userName;
        this.fullName = fullName;
        setRoles(roles);
    }

    /**
     * "Parse" means if the userName is an email this method will
     * take the name appearing before the @ symbol.  For example,
     * if the userName is john.doe@fake.com then john.doe is returned
     * by this method.  If no @ symbol is found the userName is returned.
     *
     * @return The value parsed out of an email address or the userName if not an email address.
     */
    public String parseUsername() {
        String name = userName;
        if (userName != null && userName.contains("@")) {
            name = userName.split("@")[0];
        }
        return name;
    }

    public boolean isSystemUser() {
        return false;
    }

    private void setRoles(final Set<Role> roles) {
        this.roles.clear();
        if (roles != null) {
            this.roles.addAll(roles);
        }
    }
}
