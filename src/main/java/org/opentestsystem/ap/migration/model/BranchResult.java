package org.opentestsystem.ap.migration.model;

import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.Data;
import lombok.NoArgsConstructor;

import static org.apache.commons.lang3.StringUtils.EMPTY;

@Data
@NoArgsConstructor
public class BranchResult {

    @JsonIgnore
    private String itemId;

    private String branchName;

    private String branchCurrentVersion;

    private boolean isCurrent;

    private boolean isSuccess = true;

    private MigrationError migrationError;

    private MigrationSetResult failedMigrationSetResult;

    private List<MigrationSetResult> successfulMigrationSets = new ArrayList<>(32);

    public BranchResult(String itemId, String branchName) {
        this.itemId = itemId;
        this.branchName = branchName;
    }

    public void addSuccessfulMigrationSet(MigrationSetResult successfulMigrationSet) {
        if (successfulMigrationSet != null) {
            this.successfulMigrationSets.add(successfulMigrationSet);
        }
    }

    public void setFailedMigrationSetResult(MigrationSetResult failedMigrationSetResult) {
        this.failedMigrationSetResult = failedMigrationSetResult;
        if (failedMigrationSetResult != null) {
            setMigrationError(failedMigrationSetResult.getMigrationError());
        }
    }

    public void setMigrationError(String migrationName, String errorMessage) {
        MigrationError migrationError = new MigrationError(
            itemId, branchName, EMPTY, migrationName, errorMessage);
        setMigrationError(migrationError);
    }

    private void setMigrationError(MigrationError migrationError) {
        this.isSuccess = migrationError == null ? true : false;
        this.migrationError = migrationError;
    }

    private void setSuccessfulMigrationSets(List<MigrationSetResult> successfulMigrationSets) {
        this.successfulMigrationSets.clear();
        if (successfulMigrationSets != null) {
            this.successfulMigrationSets.addAll(successfulMigrationSets);
        }
    }
}
