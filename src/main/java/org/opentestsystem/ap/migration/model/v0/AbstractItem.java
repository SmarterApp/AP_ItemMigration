/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.migration.model.v0;

import org.opentestsystem.ap.migration.model.v0.content.ItemContent;


@SuppressWarnings("rawtypes")
public abstract class AbstractItem<T extends ItemCore, S extends ItemContent> implements Item<T, S> {

    private String id;

    private Asl asl = new Asl();

    private Braille braille = new Braille();

    private Cc cc = new Cc();

    private Images images = new Images();

    private Audio audio = new Audio();

    private Translations<S> translations;

    private Workflow workflow = new Workflow();


    public AbstractItem(final String id) {
        this.id = id;
    }

    // ------------------------------------------------------------------------

    @Override
    public String getId() {
        return id;
    }

    @Override
    public Asl getAsl() {
        return asl;
    }

    public void setAsl(final Asl asl) {
        this.asl = asl != null ? asl : new Asl();
    }

    @Override
    public Braille getBraille() {
        return braille;
    }

    public void setBraille(final Braille braille) {
        this.braille = braille != null ? braille : new Braille();
    }

    @Override
    public Cc getCc() {
        return cc;
    }

    public void setCc(final Cc cc) {
        this.cc = cc != null ? cc : new Cc();
    }

    @Override
    public Images getImages() {
        return images;
    }

    @Override
    public void setImages(final Images images) {
        this.images = images != null ? images : new Images();
    }

    @Override
    public Audio getAudio() {
        return audio;
    }

    @Override
    public void setAudio(final Audio audio) {
        this.audio = audio != null ? audio : new Audio();
    }

    @Override
    public boolean supportsEax() {
        return false;
    }

    @Override
    public Translations<S> getTranslations() {
        return translations;
    }

    @Override
    public void setTranslations(final Translations<S> translations) {
        this.translations = translations;
    }

    @Override
    public Workflow getWorkflow() {
        return workflow;
    };

    @Override
    public void setWorkflow(final Workflow workflow) {
        this.workflow = workflow != null ? workflow : new Workflow();
    };

}