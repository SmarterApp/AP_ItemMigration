package org.opentestsystem.ap.migration.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
public class MigrationReport {

    private Date reportDate = new Date();

    private long reportStart;

    private long reportEnd;

    private int itemsToProcessCount;

    private List<ItemResult> itemResults = new ArrayList<>(1024);

    private List<MigrationError> failedBranchMigrations = new ArrayList<>(128);

    public int getBranchFailureCount() {
        return failedBranchMigrations.size();
    }

    public void setItemResults(List<ItemResult> itemResults) {
        this.itemResults.clear();
        if (itemResults != null) {
            itemResults.forEach(this::addItemResult);
        }
    }

    public void addItemResult(ItemResult itemResult) {
        if (itemResult != null) {
            this.itemResults.add(itemResult);
            addFailedBranchMigrations(itemResult.getFailedBranchMigrations());
        }
    }

    public void addFailedBranchMigrations(List<MigrationError> failedBranchMigrations) {
        if (failedBranchMigrations != null) {
            this.failedBranchMigrations.addAll(failedBranchMigrations);
        }
    }

    public void startMigrationTimer() {
        reportStart = System.currentTimeMillis();
    }

    public void stopMigrationTimer() {
        reportEnd = System.currentTimeMillis();
    }

    public double getExecutionTime() {
        return (reportEnd - reportStart) / 1000.0;
    }

    public Date getStartTime() {
        return new Date(reportStart);
    }

    public Date getEndTime() {
        return new Date(reportEnd);
    }
}
