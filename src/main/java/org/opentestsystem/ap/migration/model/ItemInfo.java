package org.opentestsystem.ap.migration.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

import lombok.Data;
import org.opentestsystem.ap.common.model.sync.SyncItemResult;

import static java.util.stream.Collectors.toList;

@Data
public class ItemInfo {

    private final Integer projectId;

    private final String itemId;

    private final List<BranchInfo> branches;

    public SyncItemResult getSyncResult() {
        SyncItemResult result = new SyncItemResult(itemId);
        result.setBranches(new ArrayList<>(0));
        if (Objects.nonNull(branches) && !branches.isEmpty()) {
            result.setBranches(
                branches.stream()
                    .map(BranchInfo::getSyncResult)
                    .filter(Objects::nonNull)
                    .collect(toList()));
        }
        return result;
    }

    public boolean isItemPublic() {
        boolean isPublic = false;
        if (branches != null) {
            isPublic = true;
            for (BranchInfo bi : branches) {
                if (bi.isCreateBranch()) {
                    isPublic = false;
                    break;
                }
            }
        }
        return isPublic;
    }
}
