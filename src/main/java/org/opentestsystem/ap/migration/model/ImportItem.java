package org.opentestsystem.ap.migration.model;

import lombok.Data;
import lombok.NoArgsConstructor;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.opentestsystem.ap.common.saaif.metadata.SmarterAppMetadata;
import org.opentestsystem.ap.common.saaif.wordlist.WordlistreleaseType;

import java.io.File;
import java.nio.file.Path;
import java.util.Optional;

@Data
@NoArgsConstructor
public class ImportItem {
    private ItemProps itemProps;
    // expanded zip which may contain multiple/nested folders
    private Path expandedImportItemPath;
    // the item's source path within the expanded zip, could be the root of the expanded zip or a nested folder
    private Path itemImportSourcePath;
    private ItemRelease itemRelease;
    private SmarterAppMetadata smarterAppMetadata;
    private Optional<Path> wordListPath = Optional.empty();
    private Optional<WordlistreleaseType> wordlistreleaseType = Optional.empty();
    // the saaif xml file (not the item json file)
    private File itemFile;

    public ImportItem(final ItemProps itemProps,
                      final Path expandedImportItemPath,
                      final ItemRelease itemRelease,
                      final SmarterAppMetadata smarterAppMetadata,
                      final Optional<Path> wordListPath,
                      final Optional<WordlistreleaseType> wordlistreleaseType,
                      final Path itemImportSourcePath,
                      final File itemFile) {
        this.itemProps = itemProps;
        this.expandedImportItemPath = expandedImportItemPath;
        this.itemImportSourcePath = itemImportSourcePath;
        this.itemRelease = itemRelease;
        this.smarterAppMetadata = smarterAppMetadata;
        this.wordListPath = wordListPath;
        this.wordlistreleaseType = wordlistreleaseType;
        this.itemFile = itemFile;
    }

    public ImportItem(final ItemProps itemProps, final Path expandedImportItemPath, final ItemRelease itemRelease, final SmarterAppMetadata smarterAppMetadata, final Path itemImportSourcePath) {
        this.itemProps = itemProps;
        this.expandedImportItemPath = expandedImportItemPath;
        this.itemImportSourcePath = itemImportSourcePath;
        this.itemRelease = itemRelease;
        this.smarterAppMetadata = smarterAppMetadata;
        this.wordListPath = Optional.empty();
        this.wordlistreleaseType = Optional.empty();
    }

    public String getWordlistPathString() {
        return wordListPath.isPresent() ? wordListPath.get().toString() : "";
    }
}
