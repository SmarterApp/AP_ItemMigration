package org.opentestsystem.ap.migration.config;

import java.util.ArrayList;
import java.util.List;

import lombok.Getter;
import lombok.Setter;
import org.opentestsystem.ap.common.model.ItemBankSystemUser;
import org.opentestsystem.ap.migration.model.MigrationDefinition;
import org.opentestsystem.ap.migration.model.MigrationSet;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.springframework.stereotype.Component;

@Getter
@Setter
@Component
@ConfigurationProperties(prefix = "migration")
public class AppProps {

    /**
     * True if the migration service should run.
     */
    private boolean migrationsEnabled = true;

    /**
     * True if the deletion service should run.
     */
    private boolean deleteItemsEnabled = false;

    /**
     * Item IDs that should be included when running the migration service.
     */
    private List<String> includedItems = new ArrayList<>();

    /**
     * Item IDs that should not be deleted when running the deletion service.
     */
    private List<String> doNotDeleteItems = new ArrayList<>();

    /**
     * The key to the map is the system version.  Each system version has an ordered list of migrations.
     */
    private List<MigrationSet> migrationSets = new ArrayList<>();

    /**
     * Location where report templates are kept.
     */
    private String reportTemplateFolder = "/report_templates";

    /**
     * The system username.
     */
    private String systemUsername = "item-migration@smarterbalanced.org";

    /**
     * The system user full name.
     */
    private String systemFullname = "Item Migration";

    /**
     * The commit message used when committing a migration report.
     */
    private String migrationReportCommitMessage = "Adding migration report";


    /**
     * The system user used when making data changes.
     */
    public ItemBankSystemUser getSystemUser() {
        return new ItemBankSystemUser(systemUsername, systemFullname);
    }

    /**
     * True if the report should be published to the git repo ItemBankReport.
     */
    private boolean publishReportEnabled = true;

    /**
     * The name of the production user where legacy items are stored in GitLab.  Used when downloading legacy items from
     * production.  This is specific to the GitLab instance.
     */
    private String itemBankNamespace = "itemreviewapp";

    /**
     * True if the download component is enabled.  If true the download component will run when the app starts.
     */
    private boolean downloadItemsEnabled = false;

    /**
     * The number of threads to use when processing asynchronously.
     */
    private int numberOfThreads = 10;

    /**
     * True if an item should run a post migration step.
     */
    private boolean itemPostMigrationEnabled = false;
}
