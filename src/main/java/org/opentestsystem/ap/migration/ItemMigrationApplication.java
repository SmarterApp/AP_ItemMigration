package org.opentestsystem.ap.migration;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.migration.service.DeletionService;
import org.opentestsystem.ap.migration.service.DownloadService;
import org.opentestsystem.ap.migration.service.MigrationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;

import static java.lang.System.exit;

@Slf4j
@SpringBootApplication
@ComponentScan({"org.opentestsystem.ap.migration", "org.opentestsystem.ap.common"})
public class ItemMigrationApplication implements CommandLineRunner {

    static {
        System.setProperty("javax.xml.bind.context.factory", "org.eclipse.persistence.jaxb.JAXBContextFactory");
        System.setProperty("log4j2.contextSelector", "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector");
    }

    @Autowired
    private MigrationService migrationService;

    @Autowired
    private DeletionService deletionService;

    @Autowired
    private DownloadService downloadService;

    public static void main(String[] args) throws Exception {
        SpringApplication app = new SpringApplication(ItemMigrationApplication.class);
        app.run(args);
    }

    @Override
    public void run(String... args) throws Exception {
//        delete();
        migrate();
        download();
        exit(0);
    }

    private void migrate() {
        try {
            migrationService.migrate();
        } catch (Exception e) {
            log.error("Error migrating items.  Message: " + e.getMessage(), e);
        }
    }

    private void delete() {
        try {
            deletionService.deleteItems();
        } catch (Exception e) {
            log.error("Error deleting items.  Message: " + e.getMessage(), e);
        }
    }

    private void download() {
        try {
            downloadService.download();
        } catch (Exception e) {
            log.error("Error downloading items.  Message: " + e.getMessage(), e);
        }
    }
}
