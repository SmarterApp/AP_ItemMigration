package org.opentestsystem.ap.migration.ttsmapper;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.MiItem;
import org.opentestsystem.ap.common.model.content.MiItemContent;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.springframework.stereotype.Component;

import javax.xml.bind.JAXBElement;
import java.io.Serializable;
import java.util.List;

@Component
public class MiTtsMapper extends TtsMapper {

    @Override
    public void mergeEquationTTS(Item dataStoreItem, List<ttsElementInfo> ttsElementInfoList) {
        MiItem item = (MiItem) dataStoreItem;

        setEquationTTS(item.getCore().getEn(), dataStoreItem, ttsElementInfoList);
        setEquationTTS(item.getTranslations().getEsp(), dataStoreItem, ttsElementInfoList);
    }

    @Override
    public void updateFileNamesFromItem(ItemRelease.Item item, List<ttsElementInfo> ttsElementInfoList) {
        item.getContent().forEach(content -> {
            // Look for filenames on Stem
            setFileNamesOnAccessElementInfoList(content.getStem(), ttsElementInfoList);
            // Look for filenames on Qti
            setFileNamesOnAccessElementInfoList(content.getQti().getValue(), ttsElementInfoList);
            // Look for filenames on Rubric list
            for (Serializable element : content.getRubriclist().getContent()) {
                JAXBElement jaxbElement = (JAXBElement) element;
                if (jaxbElement.getName().toString().equalsIgnoreCase("rubric")) {
                    ItemRelease.Item.Content.Rubriclist.Rubric rubric =
                            (ItemRelease.Item.Content.Rubriclist.Rubric) jaxbElement.getValue();
                    setFileNamesOnAccessElementInfoList(rubric.getVal(), ttsElementInfoList);
                }
            }
        });
    }

    private void setEquationTTS(MiItemContent itemContent, Item dataStoreItem, List<ttsElementInfo> ttsElementInfoList) {
        itemContent.setPrompt(updateTTSOnEquationImages(
                itemContent.getPrompt(),
                dataStoreItem,
                ttsElementInfoList));


        itemContent.getTable().getColumns().forEach(column ->
                column.setLabel(updateTTSOnEquationImages(
                        column.getLabel(),
                        dataStoreItem,
                        ttsElementInfoList)
                )
        );

        itemContent.getTable().getRows().forEach(row -> {
            row.getCells().forEach(cell -> {
                if (cell.getType().equals("label")) {
                    cell.setValue(updateTTSOnEquationImages(
                            (String) cell.getValue(),
                            dataStoreItem,
                            ttsElementInfoList));
                }
            });
        });
    }
}
