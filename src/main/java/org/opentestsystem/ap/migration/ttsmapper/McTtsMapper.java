package org.opentestsystem.ap.migration.ttsmapper;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.McItem;
import org.opentestsystem.ap.common.model.content.McItemContent;
import org.springframework.stereotype.Component;

import java.util.List;

import static org.opentestsystem.ap.common.model.ItemConstants.ItemLanguage.LANG_ENU;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemLanguage.LANG_ESN;

@Component
public class McTtsMapper extends TtsMapper {

    @Override
    public void mergeEquationTTS(Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        McItem item = (McItem) dataStoreItem;

        setEquationTTS(item.getCore().getEn(), LANG_ENU, dataStoreItem, ttsElementInfoList);
        setEquationTTS(item.getTranslations().getEsp(), LANG_ESN, dataStoreItem, ttsElementInfoList);
    }

//    @Override
//    public void updateFileNamesFromItem(ItemRelease.Item item, List<TtsElementInfo> ttsElementInfoList) {
//        item.getContent().forEach(content -> {
//            // Look for filenames on Stem
//            setFileNamesOnAccessElementInfoList(content.getStem(), ttsElementInfoList);
//            // Look for filenames in Rationale list
//            content.getRationaleoptlist().getRationale()
//                    .forEach(rationale -> setFileNamesOnAccessElementInfoList(
//                            rationale.getVal(), ttsElementInfoList));
//            // Look for filenames in Option List
//            content.getOptionlist().getOption()
//                    .forEach(option -> setFileNamesOnAccessElementInfoList(
//                            option.getVal(), ttsElementInfoList));
//        });
//    }

    private void setEquationTTS(McItemContent itemContent, String language, Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        itemContent.setPrompt(updateTTSOnEquationImages(
                itemContent.getPrompt(),language, dataStoreItem, ttsElementInfoList));

        itemContent.getOptions().forEach(option -> {
            option.setRationale(updateTTSOnEquationImages(
                    option.getRationale(), language, dataStoreItem, ttsElementInfoList));

            option.setText(updateTTSOnEquationImages(
                    option.getText(), language, dataStoreItem, ttsElementInfoList));
        });
    }
}