package org.opentestsystem.ap.migration.ttsmapper;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.StimItem;
import org.opentestsystem.ap.common.model.content.StimItemContent;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.springframework.stereotype.Component;

import java.util.List;

import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ENU;
import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ESN;

@Component
public class StimTtsMapper extends TtsMapper {

    @Override
    public void mergeEquationTTS(Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        StimItem item = (StimItem) dataStoreItem;

        setEquationTTS(item.getCore().getEn(), LANG_ENU, dataStoreItem, ttsElementInfoList);
        setEquationTTS(item.getTranslations().getEsp(), LANG_ESN, dataStoreItem, ttsElementInfoList);
    }

    public void updateFileNamesFromPassage(ItemRelease.Passage passage, List<TtsElementInfo> ttsElementInfoList) {
        passage.getContent().forEach(content -> {
            // Look for filenames on Stem
            setFileNamesOnAccessElementInfoList(content.getStem(), ttsElementInfoList);
        });
    }

    private void setEquationTTS(StimItemContent itemContent, String language, Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        itemContent.setContent(updateTTSOnRichTextEquationImages(
                itemContent.getContent(), language, dataStoreItem, ttsElementInfoList));
    }

}
