package org.opentestsystem.ap.migration.ttsmapper;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.TiItem;
import org.opentestsystem.ap.common.model.content.TiItemContent;
import org.springframework.stereotype.Component;

import java.util.List;

import static org.opentestsystem.ap.common.model.ItemConstants.ItemLanguage.LANG_ENU;
import static org.opentestsystem.ap.common.model.ItemConstants.ItemLanguage.LANG_ESN;

@Component
public class TiTtsMapper extends TtsMapper {
    @Override
    public void mergeEquationTTS(Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        TiItem item = (TiItem) dataStoreItem;

        setEquationTTS(item.getCore().getEn(), LANG_ENU, dataStoreItem, ttsElementInfoList);
        setEquationTTS(item.getTranslations().getEsp(), LANG_ESN, dataStoreItem, ttsElementInfoList);
    }

//    @Override
//    public void updateFileNamesFromItem(ItemRelease.Item item, List<TtsElementInfo> ttsElementInfoList) {
//        item.getContent().forEach(content -> {
//            // Look for filenames on Stem
//            setFileNamesOnAccessElementInfoList(content.getStem(), ttsElementInfoList);
//            // Look for filenames on Rubric list
//            for (Serializable element : content.getRubriclist().getContent()) {
//                JAXBElement jaxbElement = (JAXBElement) element;
//                if (jaxbElement.getName().toString().equalsIgnoreCase("rubric")) {
//                    ItemRelease.Item.Content.Rubriclist.Rubric rubric =
//                            (ItemRelease.Item.Content.Rubriclist.Rubric) jaxbElement.getValue();
//                    setFileNamesOnAccessElementInfoList(rubric.getVal(), ttsElementInfoList);
//                }
//            }
//        });
//    }

    private void setEquationTTS(TiItemContent itemContent, String language, Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        itemContent.setPrompt(updateTTSOnEquationImages(
                itemContent.getPrompt(), language, dataStoreItem, ttsElementInfoList));

        itemContent.getTable().setTitle(updateTTSOnEquationImages(
                itemContent.getTable().getTitle(), language, dataStoreItem, ttsElementInfoList));
        
        itemContent.getTable().getColumns().forEach(column ->
                column.setLabel(updateTTSOnEquationImages(
                        column.getLabel(), language, dataStoreItem, ttsElementInfoList))
        );
        itemContent.getTable().getRows().forEach(row -> {
            row.getCells().forEach(cell ->
                    cell.setValue(updateTTSOnEquationImages(
                            (String) cell.getValue(), language, dataStoreItem, ttsElementInfoList))
            );
        });
    }
}
