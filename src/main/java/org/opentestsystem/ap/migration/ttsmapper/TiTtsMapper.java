package org.opentestsystem.ap.migration.ttsmapper;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.TiItem;
import org.opentestsystem.ap.common.model.content.TiItemContent;
import org.springframework.stereotype.Component;

import java.util.List;

import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ENU;
import static org.opentestsystem.ap.common.model.ModelConstants.ItemLanguage.LANG_ESN;

@Component
public class TiTtsMapper extends TtsMapper {
    @Override
    public void mergeEquationTTS(Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        TiItem item = (TiItem) dataStoreItem;

        setEquationTTS(item.getCore().getEn(), LANG_ENU, dataStoreItem, ttsElementInfoList);
        setEquationTTS(item.getTranslations().getEsp(), LANG_ESN, dataStoreItem, ttsElementInfoList);
    }

    private void setEquationTTS(TiItemContent itemContent, String language, Item dataStoreItem, List<TtsElementInfo> ttsElementInfoList) {
        itemContent.setPrompt(updateTTSOnRichTextEquationImages(
                itemContent.getPrompt(), language, dataStoreItem, ttsElementInfoList));

        itemContent.getTable().setTitle(updateTTSOnRichTextEquationImages(
                itemContent.getTable().getTitle(), language, dataStoreItem, ttsElementInfoList));
        
        itemContent.getTable().getColumns().forEach(column ->
                column.setLabel(updateTTSOnRichTextEquationImages(
                        column.getLabel(), language, dataStoreItem, ttsElementInfoList))
        );
        itemContent.getTable().getRows().forEach(row -> {
            row.getCells().forEach(cell ->
                    cell.setValue(updateTTSOnRichTextEquationImages(
                            (String) cell.getValue(), language, dataStoreItem, ttsElementInfoList))
            );
        });
    }
}
