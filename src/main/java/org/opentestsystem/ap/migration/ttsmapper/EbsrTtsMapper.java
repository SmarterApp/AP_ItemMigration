package org.opentestsystem.ap.migration.ttsmapper;

import org.opentestsystem.ap.common.model.EbsrItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.content.EbsrItemContent;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public class EbsrTtsMapper extends TtsMapper {
    @Override
    public void mergeEquationTTS(Item dataStoreItem, List<ttsElementInfo> ttsElementInfoList) {
        EbsrItem ebsrDataStoreItem = (EbsrItem) dataStoreItem;

        setEquationTTS(ebsrDataStoreItem.getCore().getEn(), dataStoreItem, ttsElementInfoList);
        setEquationTTS(ebsrDataStoreItem.getTranslations().getEsp(), dataStoreItem, ttsElementInfoList);
    }

    @Override
    public void updateFileNamesFromItem(ItemRelease.Item item, List<ttsElementInfo> ttsElementInfoList) {
        item.getContent().forEach(content -> {
            // Look for filenames on Stem
            setFileNamesOnAccessElementInfoList(content.getStem(), ttsElementInfoList);
            // Look for filenames on Qti
            setFileNamesOnAccessElementInfoList(content.getQti().getValue(), ttsElementInfoList);
        });
    }

    private void setEquationTTS(EbsrItemContent itemContent, Item dataStoreItem, List<ttsElementInfo> ttsElementInfoList) {
        itemContent.setPrompt(this.updateTTSOnEquationImages(
                itemContent.getPrompt(),
                dataStoreItem,
                ttsElementInfoList));

        itemContent.setPartAPrompt(updateTTSOnEquationImages(
                itemContent.getPartAPrompt(),
                dataStoreItem,
                ttsElementInfoList
        ));

        itemContent.getPartAOptions().forEach(part -> {
            part.setText(updateTTSOnEquationImages(
                    part.getText(),
                    dataStoreItem,
                    ttsElementInfoList
            ));
            part.setRationale(updateTTSOnEquationImages(
                    part.getRationale(),
                    dataStoreItem,
                    ttsElementInfoList
            ));
        });

        itemContent.setPartBPrompt(updateTTSOnEquationImages(
                itemContent.getPartBPrompt(),
                dataStoreItem,
                ttsElementInfoList
        ));

        itemContent.getPartBOptions().forEach(part -> {
            part.setText(updateTTSOnEquationImages(
                    part.getText(),
                    dataStoreItem,
                    ttsElementInfoList
            ));
            part.setRationale(updateTTSOnEquationImages(
                    part.getRationale(),
                    dataStoreItem,
                    ttsElementInfoList
            ));
        });
    }
}
