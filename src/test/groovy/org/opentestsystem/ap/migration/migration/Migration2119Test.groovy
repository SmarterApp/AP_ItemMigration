package org.opentestsystem.ap.migration.migration


import org.junit.Before
import org.junit.Test
import org.mockito.Mockito
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager
import org.opentestsystem.ap.common.datastore.DataStoreDataManager
import org.opentestsystem.ap.common.datastore.DataStoreUtility
import org.opentestsystem.ap.common.datastore.entity.ItemEntity
import org.opentestsystem.ap.common.management.ItemManagerEventProducer
import org.opentestsystem.ap.common.model.WerItem
import org.opentestsystem.ap.common.model.JsonModelAssembler
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider
import org.opentestsystem.ap.migration.ApplicationProperties
import org.opentestsystem.ap.migration.datastore.Migration2119
import org.opentestsystem.ap.migration.model.MigrationContext

import static org.assertj.core.api.Assertions.assertThat

class Migration2119Test {

    // The rubric is plain text and needs converted to rich text
    def WER_JSON = "{\"id\":\"208183\",\"itsId\":\"\",\"type\":\"wer\",\"version\":\"iat-20\",\"asl\":{\"attachments\":[],\"isAslProvided\":false,\"isAslRequired\":\"undetermined\"},\"audio\":{\"audioResources\":[]},\"braille\":{\"attachments\":[],\"isBrailleProvided\":false,\"isBrailleRequired\":\"undetermined\"},\"cc\":{\"attachments\":[],\"isCcProvided\":false,\"isCcRequired\":\"undetermined\",\"itemCcAudioAssociations\":[]},\"core\":{\"attachments\":[],\"contentUpdateNeeds\":[],\"en\":{\"exemplarResponses\":[],\"isManagedByIat\":true,\"isProvided\":true,\"isRequired\":\"true\",\"prompt\":\"<p>What is the answer to the question</p>\",\"rubric\":\"2-Point Response:\\n• develops adequate supporting points/ideas/reasons/details and/or evidence from the student notes\\n• does more than list supporting details or ideas\\n• adequately elaborates ideas/reasons using precise words/language\\n\\n1-Point Response:\\n• provides mostly general and/or limited supporting\\npoints/ideas/reasons/details and/or evidence (which may be extraneous or loosely related) from the student notes\\n• lists supporting details or ideas with limited elaboration/evidence\\n• partially elaborates ideas/reasons using general words/language\\n\\n0-Point Response:\\n• provides minimal or no supporting points/ideas/reasons/details and/or evidence from the student notes\\n• provides supporting points/ideas/reasons/details and/or evidence that may be unclear, repetitive, incorrect, contradictory to, or interfere with the meaning of the text\\n• provides no appropriate elaboration and/or may use poor word choice for audience and purpose\"},\"enemyItems\":[],\"metadata\":{\"accessibilityLanguageComplexity\":\"\",\"algebraDescriptor1\":\"\",\"algebraDescriptor2\":\"\",\"allowCalculator\":\"\",\"claim2Category\":\"\",\"claim2SubCategory\":\"\",\"contentTaskModel\":\"qwr\",\"copyrightHolder\":\"\",\"copyrightHolderOther\":\"\",\"depthOfKnowledge\":\"2\",\"easyListeningFormula\":\"\",\"estimatedQuintile\":\"1\",\"evidenceStatement\":\"\",\"intendedGrade\":\"3\",\"itemAuthor\":\"\",\"languageFeatures\":\"\",\"maxGrade\":\"\",\"maximumPoints\":\"\",\"meaningPurpose\":\"\",\"minGrade\":\"\",\"organizationName\":\"\",\"organizationTypeId\":\"\",\"performanceTask\":\"\",\"performanceTaskPosition\":\"\",\"presentationFormat\":[],\"primaryClaim\":\"2\",\"primaryCommonCoreStandard\":\"\",\"primaryContentDomain\":\"\",\"primaryEmphasis\":null,\"primaryMathematicalPractice\":\"\",\"primaryTarget\":\"A\",\"primaryTargetSet\":\"\",\"quaternaryClaim\":\"\",\"quaternaryCommonCoreStandard\":\"\",\"quaternaryContentDomain\":\"\",\"quaternaryMathematicalPractice\":\"\",\"quaternaryTarget\":\"\",\"readabilityFleschKincaid\":\"\",\"readabilityLexile\":\"\",\"scorePoints\":\"\",\"scoringEngine\":\"\",\"secondaryClaim\":\"\",\"secondaryCommonCoreStandard\":\"\",\"secondaryContentDomain\":\"\",\"secondaryMathematicalPractice\":\"\",\"secondaryTarget\":\"\",\"specificationsVersion\":\"\",\"stimulusFormat\":\"\",\"stimulusGenre\":\"\",\"stimulusLength\":\"\",\"stimulusLiteraryCategory\":\"\",\"stimulusLiteraryKnowledgeDemands\":\"\",\"stimulusName\":\"\",\"structure\":\"\",\"subject\":\"Math\",\"tertiaryClaim\":\"\",\"tertiaryCommonCoreStandard\":\"\",\"tertiaryContentDomain\":\"\",\"tertiaryMathematicalPractice\":\"\",\"tertiaryTarget\":\"\",\"testCategory\":\"\",\"version\":\"0.0\",\"wordCount\":\"\",\"writingPurpose\":\"\"},\"scoring\":{\"defaultScore\":0,\"isManagedByIat\":true,\"rubric\":\"\",\"rules\":[],\"variables\":[]},\"stimulusId\":null,\"testAdministration\":{\"administrations\":[],\"fieldTestAdministrationId\":\"\"},\"tutorialId\":null},\"glossary\":{\"isEnglishGlossaryProvided\":false,\"isIllustratedGlossaryProvided\":false,\"isIllustratedGlossaryRequired\":\"undetermined\",\"isTranslatedGlossaryProvided\":false,\"isTranslatedGlossaryRequired\":\"undetermined\",\"terms\":[]},\"images\":{\"imageResources\":[]},\"review\":{\"dataReview\":{\"facilitator\":{\"feedback\":\"\",\"feedbackComment\":\"\",\"username\":\"\"},\"members\":[]},\"educatorCommitteeReview\":{\"facilitator\":{\"feedback\":{\"feedback\":\"\",\"feedbackComment\":\"\",\"username\":\"\"},\"passesAccessibilityQualityCriteria\":\"\",\"passesAccessibilityQualityCriteriaComment\":\"\",\"passesBiasAndSensitivityQualityCriteria\":\"\",\"passesBiasAndSensitivityQualityCriteriaComment\":\"\",\"passesContentQualityCriteria\":\"\",\"passesContentQualityCriteriaComment\":\"\"},\"members\":[]}},\"textToSpeech\":{\"isSightTTSProvided\":false,\"isVisualTTSProvided\":false,\"isVisualTTSRequired\":\"undetermined\"},\"translations\":{\"esp\":{\"exemplarResponses\":[],\"isManagedByIat\":true,\"isProvided\":false,\"isRequired\":\"undetermined\",\"prompt\":\"\",\"rubric\":\"\",\"updatedDate\":\"2018-10-23T15:03:23.822Z\"}},\"workflow\":{\"workflowStatusCode\":\"Draft\"}}"

    ApplicationDependencyProvider applicationDependencyProvider;

    ApplicationProperties applicationProperties

    DataStoreDataManager dataManager

    ItemManagerEventProducer eventProducer

    DataStoreUtility dataStoreUtility

    DataStoreAttachmentManager attachmentManager

    JsonModelAssembler assembler

    Migration2119 migration

    @Before
    void setup() {
        this.applicationDependencyProvider = Mockito.mock(ApplicationDependencyProvider)
        this.applicationProperties = Mockito.mock(ApplicationProperties)
        this.dataManager = Mockito.mock(DataStoreDataManager)
        this.eventProducer = Mockito.mock(ItemManagerEventProducer)
        this.dataStoreUtility = Mockito.mock(DataStoreUtility)
        this.attachmentManager = Mockito.mock(DataStoreAttachmentManager)

        this.assembler = new JsonModelAssembler()

        this.migration = new Migration2119(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, attachmentManager)
    }

    @Test
    void isShouldMigrateWerRubric() {
        String expectedRubric = "2-Point Response:<br/>• develops adequate supporting points/ideas/reasons/details and/or evidence from the student notes<br/>• does more than list supporting details or ideas<br/>• adequately elaborates ideas/reasons using precise words/language<p style=\"\">&#xA0;</p>1-Point Response:<br/>• provides mostly general and/or limited supporting<br/>points/ideas/reasons/details and/or evidence (which may be extraneous or loosely related) from the student notes<br/>• lists supporting details or ideas with limited elaboration/evidence<br/>• partially elaborates ideas/reasons using general words/language<p style=\"\">&#xA0;</p>0-Point Response:<br/>• provides minimal or no supporting points/ideas/reasons/details and/or evidence from the student notes<br/>• provides supporting points/ideas/reasons/details and/or evidence that may be unclear, repetitive, incorrect, contradictory to, or interfere with the meaning of the text<br/>• provides no appropriate elaboration and/or may use poor word choice for audience and purpose"

        WerItem item = (WerItem) assembler.readItem(WER_JSON)
        ItemEntity entity = Mockito.mock(ItemEntity)
        Mockito.when(entity.itemJson).thenReturn(item)

        MigrationContext context = Mockito.mock(MigrationContext.class)
        this.migration.migrateEntity(entity, context)

        assertThat(item.core.en.rubric).isEqualTo(expectedRubric)
    }

    @Test
    void itShouldMapPlainTextToHtml() {
        String expected = "2-Point Response:<br/>• develops adequate supporting points/ideas/reasons/details and/or evidence from the student notes<br/>• does more than list supporting details or ideas<br/>• adequately elaborates ideas/reasons using precise words/language<p style=\"\">&#xA0;</p>1-Point Response:<br/>• provides mostly general and/or limited supporting<br/>points/ideas/reasons/details and/or evidence (which may be extraneous or loosely related) from the student notes<br/>• lists supporting details or ideas with limited elaboration/evidence<br/>• partially elaborates ideas/reasons using general words/language<p style=\"\">&#xA0;</p>0-Point Response:<br/>• provides minimal or no supporting points/ideas/reasons/details and/or evidence from the student notes<br/>• provides supporting points/ideas/reasons/details and/or evidence that may be unclear, repetitive, incorrect, contradictory to, or interfere with the meaning of the text<br/>• provides no appropriate elaboration and/or may use poor word choice for audience and purpose"
        String plainText = "2-Point Response:\n• develops adequate supporting points/ideas/reasons/details and/or evidence from the student notes\n• does more than list supporting details or ideas\n• adequately elaborates ideas/reasons using precise words/language\n\n1-Point Response:\n• provides mostly general and/or limited supporting\npoints/ideas/reasons/details and/or evidence (which may be extraneous or loosely related) from the student notes\n• lists supporting details or ideas with limited elaboration/evidence\n• partially elaborates ideas/reasons using general words/language\n\n0-Point Response:\n• provides minimal or no supporting points/ideas/reasons/details and/or evidence from the student notes\n• provides supporting points/ideas/reasons/details and/or evidence that may be unclear, repetitive, incorrect, contradictory to, or interfere with the meaning of the text\n• provides no appropriate elaboration and/or may use poor word choice for audience and purpose"
        String actual = plainText.replaceAll('\\n\\n', '<p style="">&#xA0;</p>').replaceAll('\\n', '<br/>')
        assertThat(actual).isEqualTo(expected)
    }
}
