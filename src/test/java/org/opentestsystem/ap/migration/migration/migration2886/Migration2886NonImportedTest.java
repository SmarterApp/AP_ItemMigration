package org.opentestsystem.ap.migration.migration.migration2886;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.MsItem;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.MigrationContext;

@RunWith(MockitoJUnitRunner.class)
public class Migration2886NonImportedTest {

    @Mock
    private ApplicationDependencyProvider applicationDependencyProvider;
    @Mock
    private ApplicationProperties applicationProperties;

    @Mock
    private DataStoreDataManager dataManager;

    @Mock
    private ItemManagerEventProducer eventProducer;

    @Mock
    private DataStoreUtility dataStoreUtility;

    @Mock
    private DataStoreAttachmentManager dataStoreAttachmentManager;

    private Migration2886NonImported migration;

    private MigrationContext migrationContext = new MigrationContext("",new ApplicationProperties.MigrationDefinition());

    private final String itemId = "200100";
    private final String master = "master";
    private final String defaultMaxAllowedAnwers = "0";

    @Before
    public void before() {
        migration = new Migration2886NonImported(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Test
    public void itShouldSetDefaultMaxAllowedAnswersValue() {
        MsItem item = new MsItem(itemId);
        ItemEntity itemEntity = new ItemEntity(itemId, master);

        itemEntity.setItemJson(item);

        migration.migrateEntity(itemEntity, migrationContext);

        Assert.assertEquals(item.getCore().getMetadata().getMaxAllowedAnswers(), defaultMaxAllowedAnwers);
    }
}
