package org.opentestsystem.ap.migration.migration;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreItemManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.model.EbsrItem;
import org.opentestsystem.ap.common.model.SaItem;
import org.opentestsystem.ap.common.saaif.mapper.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;

@RunWith(MockitoJUnitRunner.class)
public class Migration3165Test {
    @Mock
    private ApplicationProperties applicationProperties;

    @Mock
    private DataStoreDataManager dataManager;

    @Mock
    private DataStoreItemManager dataStoreItemManager;

    @Mock
    private DataStoreUtility dataStoreUtility;

    @Mock
    private DataStoreAttachmentManager dataStoreAttachmentManager;

    @Mock
    private ApplicationDependencyProvider applicationDependencyProvider;

    private Migration3165 migration;

    @Before
    public void setUp() {
        migration = new Migration3165(applicationDependencyProvider, applicationProperties, dataManager, dataStoreItemManager, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Test(expected = SkipMigration.class)
    public void shouldNotProcessNonEbsrItem() {
        ItemEntity itemEntity = new ItemEntity("1", "master");
        SaItem item = new SaItem("1");

        itemEntity.setItemJson(item);

        migration.migrateEntity(itemEntity, mock(MigrationContext.class));
    }

    @Test
    public void shouldProcessEbsr() {
        ItemEntity itemEntity = new ItemEntity("1", "master");
        EbsrItem ebsrItem = new EbsrItem("1");
        itemEntity.setItemJson(ebsrItem);
        assertThat(migration.migrateEntity(itemEntity, mock(MigrationContext.class))).isEqualTo(itemEntity);
    }
}