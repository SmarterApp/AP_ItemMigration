package org.opentestsystem.ap.migration.migration;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreItemManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.model.MiItem;
import org.opentestsystem.ap.common.model.SaItem;
import org.opentestsystem.ap.common.saaif.mapper.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.MigrationContext;
import org.opentestsystem.ap.migration.util.ApplicationDependencyProvider;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;

@RunWith(MockitoJUnitRunner.class)
public class Migration3227Test {
    @Mock
    private ApplicationProperties applicationProperties;

    @Mock
    private DataStoreDataManager dataManager;

    @Mock
    private DataStoreItemManager dataStoreItemManager;

    @Mock
    private DataStoreUtility dataStoreUtility;

    @Mock
    private DataStoreAttachmentManager dataStoreAttachmentManager;

    @Mock
    private ApplicationDependencyProvider applicationDependencyProvider;

    private Migration3227 migration;

    @Before
    public void setUp() {
        migration = new Migration3227(applicationDependencyProvider, applicationProperties, dataManager, dataStoreItemManager, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Test (expected = SkipMigration.class)
    public void shouldSkipNonMiItems() {
        SaItem saItem = new SaItem("1");
        ItemEntity entity = new ItemEntity("1", "master");
        entity.setItemJson(saItem);

        migration.migrateEntity(entity, mock(MigrationContext.class));
    }

    @Test
    public void shouldTouchMigrationMiItems() {
        MiItem saItem = new MiItem("1");
        ItemEntity entity = new ItemEntity("1", "master");
        entity.setItemJson(saItem);

        ItemEntity migratedEntity = migration.migrateEntity(entity, mock(MigrationContext.class));

        assertThat(migratedEntity).isEqualTo(entity);
    }
}