package org.opentestsystem.ap.migration.migration.migration2849;


import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.SaItem;
import org.opentestsystem.ap.common.saaif.model.SkipMigration;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;
import org.opentestsystem.ap.migration.model.MigrationContext;

@RunWith(MockitoJUnitRunner.class)
public class Migration2849NonImportTest {
    @Mock
    private ApplicationDependencyProvider applicationDependencyProvider;

    @Mock
    private ApplicationProperties applicationProperties;

    @Mock
    private DataStoreDataManager dataManager;

    @Mock
    private ItemManagerEventProducer eventProducer;

    @Mock
    private DataStoreUtility dataStoreUtility;

    @Mock
    private DataStoreAttachmentManager dataStoreAttachmentManager;

    private Migration2849NonImport migration;

    @Before
    public void setUp() {
        migration = new Migration2849NonImport(applicationDependencyProvider, applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager);
    }

    @Test(expected = SkipMigration.class)
    public void shouldOnlyMigrateStimuli() {
        SaItem item = new SaItem("123");
        ItemEntity itemEntity = new ItemEntity("123", "master");
        itemEntity.setItemJson(item);

        migration.migrateEntity(itemEntity, new MigrationContext("x", new ApplicationProperties.MigrationDefinition()));
    }
}