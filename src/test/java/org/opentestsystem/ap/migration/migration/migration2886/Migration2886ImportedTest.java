package org.opentestsystem.ap.migration.migration.migration2886;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.ap.common.model.ItemOption;
import org.opentestsystem.ap.common.model.MsItem;
import org.opentestsystem.ap.migration.ApplicationDependencyProvider;
import org.opentestsystem.ap.migration.ApplicationProperties;

import java.io.File;

@RunWith(MockitoJUnitRunner.class)
public class Migration2886ImportedTest {
    @Mock
    private ApplicationDependencyProvider applicationDependencyProvider;
    @Mock
    private ApplicationProperties applicationProperties;

    @Mock
    private DataStoreDataManager dataManager;

    @Mock
    private ItemManagerEventProducer eventProducer;

    @Mock
    private DataStoreUtility dataStoreUtility;

    @Mock
    private DataStoreAttachmentManager dataStoreAttachmentManager;

    private Migration2886Imported migration;


    private final String itemId = "10000";

    @Before
    public void before() {
        migration = new Migration2886Imported(applicationProperties, dataManager, eventProducer, dataStoreUtility, dataStoreAttachmentManager, applicationDependencyProvider);
    }

    @Test
    public void itShouldSetMaxAllowedAnswersFromImportData() {
        MsItem msItem = new MsItem(itemId);
        msItem.getCore().getEn().getOptions().add(new ItemOption());
        msItem.getCore().getEn().getOptions().add(new ItemOption());

        MsItem mappedItem = new MsItem(itemId);
        mappedItem.getCore().getMetadata().setMaxAllowedAnswers("2");

        migration.mergeItem(msItem, mappedItem, new File("test").toPath());

        Assert.assertEquals(msItem.getCore().getMetadata().getMaxAllowedAnswers(),"2");
    }

    @Test
    public void itShouldSetMaxAllowedAnswersOptionSize() {
        MsItem msItem = new MsItem(itemId);
        msItem.getCore().getEn().getOptions().add(new ItemOption());
        msItem.getCore().getEn().getOptions().add(new ItemOption());

        MsItem mappedItem = new MsItem(itemId);
        mappedItem.getCore().getMetadata().setMaxAllowedAnswers("4");

        migration.mergeItem(msItem, mappedItem, new File("test").toPath());

        Assert.assertEquals(msItem.getCore().getMetadata().getMaxAllowedAnswers(),"4");
    }
}
